// <auto-generated />
using Infractructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infractructure.Migrations
{
    [DbContext(typeof(OkFruitCtx))]
    [Migration("20220510042025_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "معدلی",
                            Name = "محمدعلی"
                        },
                        new
                        {
                            Id = 2,
                            LastName = "ناصحی",
                            Name = "علی"
                        },
                        new
                        {
                            Id = 3,
                            LastName = "رنجبر",
                            Name = "حامد"
                        },
                        new
                        {
                            Id = 4,
                            LastName = "شیری",
                            Name = "کریم"
                        },
                        new
                        {
                            Id = 5,
                            LastName = "محمدزاده",
                            Name = "نیما"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "سیب",
                            Price = 8000.0,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "پرتقال",
                            Price = 6500.0,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "هویج",
                            Price = 5000.0,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "گیلاس",
                            Price = 10000.0,
                            UnitTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "موز",
                            Price = 15000.0,
                            UnitTypeId = 1
                        });
                });

            modelBuilder.Entity("Core.Entities.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("purchase", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            ProductId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 1,
                            ProductId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 1,
                            ProductId = 4,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2,
                            ProductId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 2,
                            ProductId = 4,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 2,
                            ProductId = 3,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 3,
                            ProductId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 4,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 4,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 4,
                            ProductId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 12,
                            CustomerId = 4,
                            ProductId = 4,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 13,
                            CustomerId = 4,
                            ProductId = 5,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 14,
                            CustomerId = 5,
                            ProductId = 4,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 15,
                            CustomerId = 5,
                            ProductId = 3,
                            Quantity = 6
                        });
                });

            modelBuilder.Entity("Core.Entities.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("unitType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "کیلوگرم"
                        });
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.HasOne("Core.Entities.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("Core.Entities.Purchase", b =>
                {
                    b.HasOne("Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
